//Memoization - TC: O(n * m), SC: O(n * m) + O(n + m)
    int find(string word1, string word2, int i, int j, vector<vector<int>>& dp){
        if(j < 0) return i+1;
        if(i < 0) return j+1;
        if(dp[i][j] != -1) return dp[i][j];
        if(word1[i] == word2[j]) return find(word1, word2, i-1, j-1, dp);
        return dp[i][j] = 1 + min(find(word1, word2, i-1, j, dp), 
        min(find(word1, word2, i, j-1, dp), find(word1, word2, i-1, j-1, dp)));
    }
    int minDistance(string word1, string word2) {
        int n = word1.size(), m = word2.size();
        vector<vector<int>> dp(n+1, vector<int>(m+1, -1));
        return find(word1, word2, n-1, m-1, dp);
    }
