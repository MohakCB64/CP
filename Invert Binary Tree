class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
    
    if(nullptr == root) return root;
    
    queue<TreeNode*> myQueue;  
    myQueue.push(root);        

    while(!myQueue.empty()){     
        
        TreeNode *node = myQueue.front();  
        myQueue.pop();                    
                 
        if(node->left != nullptr){        
            myQueue.push(node->left);
        }
        
        if(node->right != nullptr){        
            myQueue.push(node->right);
        }
        
        // invert left and right pointers      
        TreeNode* tmp = node->left;
        node->left = node->right;
        node->right = tmp;

    }

    return root;
}
};
