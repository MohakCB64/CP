class Solution {
public:
vector<vector<long long>>v;
int mod=1e9+7;
    long long solve(vector<int>&nums){
        if(nums.size()<=2){
            return 1;
        }
        vector<int>left,right;
        int c=nums[0];
        for(int i=1;i<nums.size();i++){
            if(nums[i]<c){
                left.push_back(nums[i]);
            }
            else{
                right.push_back(nums[i]);
            }
        }
        return (solve(left)%mod*solve(right)%mod*(v[nums.size()-1][left.size()])%mod)%mod;
    }
    int numOfWays(vector<int>& nums) {
        int numRows=nums.size();
          v=vector<vector<long long>>(numRows);
        for(int i=0;i<numRows;i++){
            v[i].resize(i+1);
            v[i][0]=1;
            v[i][i]=1;
            for(int j=1;j<i;j++){
                v[i][j]=(v[i-1][j-1]+v[i-1][j])%mod;
            }
        }
       return solve(nums)-1; 
    }
    
};
